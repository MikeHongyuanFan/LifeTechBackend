spring:
  application:
    name: Tycoon Admin Management
  
  profiles:
    active: dev
  
  datasource:
    url: jdbc:postgresql://localhost:5433/tycoon_admin
    username: admin
    password: password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_schema: public
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    defer-datasource-initialization: true
    
  sql:
    init:
      mode: always
      continue-on-error: true
        
  redis:
    host: localhost
    port: 6380
    password: ${REDIS_PASSWORD:}
    timeout: 2000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        shutdown-timeout: 200
      client:
        type: lettuce
        
  data:
    mongodb:
      uri: ${MONGO_URI:mongodb://localhost:27017/tycoon_admin_docs}
      
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# Application Configuration
app:
  jwt:
    secret: ${JWT_SECRET:myVerySecretJWTKeyForTycoonAdminSystemThatIsAtLeast256BitsLong}
    expiration: 3600000 # 1 hour
    refresh-expiration: 604800000 # 7 days
  
  security:
    allowed-ips: ${ALLOWED_IPS:127.0.0.1,::1,0:0:0:0:0:0:0:1,localhost}
    max-failed-attempts: 5
    lockout-duration: 900000 # 15 minutes
    session-timeout: 1800000 # 30 minutes
    ip-blocking-enabled: false
    filter:
      order: 10
    
  audit:
    retention-days: 2555 # 7 years
    cleanup-schedule: "0 0 2 * * ?" # Daily at 2 AM

# API Documentation
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha
    tags-sorter: alpha
    try-it-out-enabled: true
    persist-authorization: true
    packages-to-scan: com.tycoon.admin
    paths-to-match: /**
    show-actuator: false
    
# Logging Configuration
logging:
  level:
    root: INFO
    com.tycoon.admin: ${LOG_LEVEL:DEBUG}
    org.springframework.security: INFO
    org.springframework.data.redis: DEBUG
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"

# Actuator
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        readiness:
          include: db,redis,mongo,rabbit
        liveness:
          include: ping
  health:
    redis:
      enabled: true
    db:
      enabled: true
    mongo:
      enabled: true
    rabbit:
      enabled: true
    mail:
      enabled: false
    diskspace:
      enabled: true

# Server Configuration
server:
  port: 8090
  servlet:
    context-path: /api/admin
  error:
    include-message: always
    include-binding-errors: always

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    show-sql: true
  redis:
    host: localhost
    port: 6380
  h2:
    console:
      enabled: true

logging:
  level:
    com.tycoon.admin: DEBUG
    org.springframework.security: DEBUG

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
  
app:
  jwt:
    secret: testSecretKeyForTycoonAdminSystemThatIsAtLeast256BitsLong
    expiration: 600000 # 10 minutes for tests

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/tycoon_admin
    username: admin
    password: password
  data:
    mongodb:
      uri: mongodb://mongodb:27017/tycoon_admin_docs
  redis:
    host: redis
    port: 6379
    timeout: 2000
    lettuce:
      shutdown-timeout: 200
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest

logging:
  level:
    root: INFO
    com.tycoon.admin: INFO
    org.springframework.security: INFO
