<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="1.524" tests="23" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/hongyuanfan/Desktop/lifetech/LifeTechBackend/Backend/target/test-classes:/Users/hongyuanfan/Desktop/lifetech/LifeTechBackend/Backend/target/classes:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.3/spring-boot-starter-web-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.3/spring-boot-starter-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot/3.2.3/spring-boot-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.3/spring-boot-autoconfigure-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.3/spring-boot-starter-logging-3.2.3.jar:/Users/hongyuanfan/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/hongyuanfan/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/hongyuanfan/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/hongyuanfan/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/hongyuanfan/.m2/repository/org/slf4j/jul-to-slf4j/2.0.12/jul-to-slf4j-2.0.12.jar:/Users/hongyuanfan/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/hongyuanfan/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.3/spring-boot-starter-json-3.2.3.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.4/jackson-datatype-jdk8-2.15.4.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.4/jackson-module-parameter-names-2.15.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.3/spring-boot-starter-tomcat-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.19/tomcat-embed-core-10.1.19.jar:/Users/hongyuanfan/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.19/tomcat-embed-websocket-10.1.19.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-web/6.1.4/spring-web-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-beans/6.1.4/spring-beans-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-webmvc/6.1.4/spring-webmvc-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-context/6.1.4/spring-context-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-expression/6.1.4/spring-expression-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.3/spring-boot-starter-security-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-aop/6.1.4/spring-aop-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/security/spring-security-config/6.2.2/spring-security-config-6.2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/security/spring-security-web/6.2.2/spring-security-web-6.2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.3/spring-boot-starter-data-jpa-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.3/spring-boot-starter-jdbc-3.2.3.jar:/Users/hongyuanfan/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-jdbc/6.1.4/spring-jdbc-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/hibernate/orm/hibernate-core/6.4.4.Final/hibernate-core-6.4.4.Final.jar:/Users/hongyuanfan/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/hongyuanfan/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/hongyuanfan/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/hongyuanfan/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/hongyuanfan/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/Users/hongyuanfan/.m2/repository/net/bytebuddy/byte-buddy/1.14.12/byte-buddy-1.14.12.jar:/Users/hongyuanfan/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/Users/hongyuanfan/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/Users/hongyuanfan/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/Users/hongyuanfan/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/hongyuanfan/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/hongyuanfan/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/data/spring-data-jpa/3.2.3/spring-data-jpa-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/data/spring-data-commons/3.2.3/spring-data-commons-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-orm/6.1.4/spring-orm-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-aspects/6.1.4/spring-aspects-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/3.2.3/spring-boot-starter-data-redis-3.2.3.jar:/Users/hongyuanfan/.m2/repository/io/lettuce/lettuce-core/6.3.1.RELEASE/lettuce-core-6.3.1.RELEASE.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-common/4.1.107.Final/netty-common-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-handler/4.1.107.Final/netty-handler-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.107.Final/netty-transport-native-unix-common-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-transport/4.1.107.Final/netty-transport-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/projectreactor/reactor-core/3.6.3/reactor-core-3.6.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/data/spring-data-redis/3.2.3/spring-data-redis-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/data/spring-data-keyvalue/3.2.3/spring-data-keyvalue-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-oxm/6.1.4/spring-oxm-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-data-mongodb/3.2.3/spring-boot-starter-data-mongodb-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/mongodb/mongodb-driver-sync/4.11.1/mongodb-driver-sync-4.11.1.jar:/Users/hongyuanfan/.m2/repository/org/mongodb/bson/4.11.1/bson-4.11.1.jar:/Users/hongyuanfan/.m2/repository/org/mongodb/mongodb-driver-core/4.11.1/mongodb-driver-core-4.11.1.jar:/Users/hongyuanfan/.m2/repository/org/mongodb/bson-record-codec/4.11.1/bson-record-codec-4.11.1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/data/spring-data-mongodb/4.2.3/spring-data-mongodb-4.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.3/spring-boot-starter-validation-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.19/tomcat-embed-el-10.1.19.jar:/Users/hongyuanfan/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/hongyuanfan/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-mail/3.2.3/spring-boot-starter-mail-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-context-support/6.1.4/spring-context-support-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.2/jakarta.mail-2.0.2.jar:/Users/hongyuanfan/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/hongyuanfan/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.2.3/spring-boot-starter-amqp-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-messaging/6.1.4/spring-messaging-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/amqp/spring-rabbit/3.1.2/spring-rabbit-3.1.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/amqp/spring-amqp/3.1.2/spring-amqp-3.1.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/retry/spring-retry/2.0.5/spring-retry-2.0.5.jar:/Users/hongyuanfan/.m2/repository/com/rabbitmq/amqp-client/5.19.0/amqp-client-5.19.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.2.3/spring-boot-starter-actuator-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.2.3/spring-boot-actuator-autoconfigure-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-actuator/3.2.3/spring-boot-actuator-3.2.3.jar:/Users/hongyuanfan/.m2/repository/io/micrometer/micrometer-observation/1.12.3/micrometer-observation-1.12.3.jar:/Users/hongyuanfan/.m2/repository/io/micrometer/micrometer-commons/1.12.3/micrometer-commons-1.12.3.jar:/Users/hongyuanfan/.m2/repository/io/micrometer/micrometer-jakarta9/1.12.3/micrometer-jakarta9-1.12.3.jar:/Users/hongyuanfan/.m2/repository/io/micrometer/micrometer-core/1.12.3/micrometer-core-1.12.3.jar:/Users/hongyuanfan/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/hongyuanfan/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.3/spring-boot-starter-aop-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/Users/hongyuanfan/.m2/repository/org/springframework/statemachine/spring-statemachine-starter/4.0.0/spring-statemachine-starter-4.0.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/statemachine/spring-statemachine-autoconfigure/4.0.0/spring-statemachine-autoconfigure-4.0.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/statemachine/spring-statemachine-core/4.0.0/spring-statemachine-core-4.0.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-batch/3.2.3/spring-boot-starter-batch-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/batch/spring-batch-core/5.1.1/spring-batch-core-5.1.1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/batch/spring-batch-infrastructure/5.1.1/spring-batch-infrastructure-5.1.1.jar:/Users/hongyuanfan/.m2/repository/org/postgresql/postgresql/42.6.1/postgresql-42.6.1.jar:/Users/hongyuanfan/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/hongyuanfan/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/Users/hongyuanfan/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/Users/hongyuanfan/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/Users/hongyuanfan/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:/Users/hongyuanfan/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.2.0/springdoc-openapi-starter-webmvc-ui-2.2.0.jar:/Users/hongyuanfan/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.2.0/springdoc-openapi-starter-webmvc-api-2.2.0.jar:/Users/hongyuanfan/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.2.0/springdoc-openapi-starter-common-2.2.0.jar:/Users/hongyuanfan/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.15/swagger-core-jakarta-2.2.15.jar:/Users/hongyuanfan/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.15/swagger-annotations-jakarta-2.2.15.jar:/Users/hongyuanfan/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.15/swagger-models-jakarta-2.2.15.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.4/jackson-dataformat-yaml-2.15.4.jar:/Users/hongyuanfan/.m2/repository/org/webjars/swagger-ui/5.2.0/swagger-ui-5.2.0.jar:/Users/hongyuanfan/.m2/repository/com/github/vladimir-bukhtoyarov/bucket4j-core/7.6.0/bucket4j-core-7.6.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.3/spring-boot-starter-test-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-test/3.2.3/spring-boot-test-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.3/spring-boot-test-autoconfigure-3.2.3.jar:/Users/hongyuanfan/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/hongyuanfan/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/hongyuanfan/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/hongyuanfan/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/hongyuanfan/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/hongyuanfan/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/hongyuanfan/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/hongyuanfan/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/hongyuanfan/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/Users/hongyuanfan/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/Users/hongyuanfan/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/hongyuanfan/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/Users/hongyuanfan/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/hongyuanfan/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/Users/hongyuanfan/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/Users/hongyuanfan/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/Users/hongyuanfan/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/hongyuanfan/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.12/byte-buddy-agent-1.14.12.jar:/Users/hongyuanfan/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/hongyuanfan/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/hongyuanfan/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/hongyuanfan/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-core/6.1.4/spring-core-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-jcl/6.1.4/spring-jcl-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-test/6.1.4/spring-test-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/security/spring-security-test/6.2.2/spring-security-test-6.2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/security/spring-security-core/6.2.2/spring-security-core-6.2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/security/spring-security-crypto/6.2.2/spring-security-crypto-6.2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/amqp/spring-rabbit-test/3.1.2/spring-rabbit-test-3.1.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/amqp/spring-rabbit-junit/3.1.2/spring-rabbit-junit-3.1.2.jar:/Users/hongyuanfan/.m2/repository/org/hamcrest/hamcrest-library/2.2/hamcrest-library-2.2.jar:/Users/hongyuanfan/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/junit-jupiter/1.19.3/junit-jupiter-1.19.3.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/testcontainers/1.19.3/testcontainers-1.19.3.jar:/Users/hongyuanfan/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/hongyuanfan/.m2/repository/org/apache/commons/commons-compress/1.24.0/commons-compress-1.24.0.jar:/Users/hongyuanfan/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/Users/hongyuanfan/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/Users/hongyuanfan/.m2/repository/com/github/docker-java/docker-java-api/3.3.4/docker-java-api-3.3.4.jar:/Users/hongyuanfan/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.4/docker-java-transport-zerodep-3.3.4.jar:/Users/hongyuanfan/.m2/repository/com/github/docker-java/docker-java-transport/3.3.4/docker-java-transport-3.3.4.jar:/Users/hongyuanfan/.m2/repository/net/java/dev/jna/jna/5.13.0/jna-5.13.0.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/postgresql/1.19.3/postgresql-1.19.3.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/jdbc/1.19.3/jdbc-1.19.3.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/database-commons/1.19.3/database-commons-1.19.3.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/mongodb/1.19.3/mongodb-1.19.3.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/rabbitmq/1.19.3/rabbitmq-1.19.3.jar:/Users/hongyuanfan/.m2/repository/com/itextpdf/kernel/7.2.5/kernel-7.2.5.jar:/Users/hongyuanfan/.m2/repository/com/itextpdf/io/7.2.5/io-7.2.5.jar:/Users/hongyuanfan/.m2/repository/com/itextpdf/commons/7.2.5/commons-7.2.5.jar:/Users/hongyuanfan/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.70/bcprov-jdk15on-1.70.jar:/Users/hongyuanfan/.m2/repository/org/slf4j/slf4j-api/2.0.12/slf4j-api-2.0.12.jar:/Users/hongyuanfan/.m2/repository/com/itextpdf/layout/7.2.5/layout-7.2.5.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/s3/2.21.29/s3-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/aws-xml-protocol/2.21.29/aws-xml-protocol-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/aws-query-protocol/2.21.29/aws-query-protocol-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/protocol-core/2.21.29/protocol-core-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/arns/2.21.29/arns-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/profiles/2.21.29/profiles-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/crt-core/2.21.29/crt-core-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/http-auth/2.21.29/http-auth-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/identity-spi/2.21.29/identity-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/http-auth-spi/2.21.29/http-auth-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/http-auth-aws/2.21.29/http-auth-aws-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/checksums-spi/2.21.29/checksums-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/checksums/2.21.29/checksums-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/sdk-core/2.21.29/sdk-core-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/auth/2.21.29/auth-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/eventstream/eventstream/1.0.1/eventstream-1.0.1.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/http-client-spi/2.21.29/http-client-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/regions/2.21.29/regions-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/annotations/2.21.29/annotations-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/utils/2.21.29/utils-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/aws-core/2.21.29/aws-core-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/metrics-spi/2.21.29/metrics-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/json-utils/2.21.29/json-utils-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/third-party-jackson-core/2.21.29/third-party-jackson-core-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/endpoints-spi/2.21.29/endpoints-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/apache-client/2.21.29/apache-client-2.21.29.jar:/Users/hongyuanfan/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/Users/hongyuanfan/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/hongyuanfan/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/hongyuanfan/.m2/repository/commons-codec/commons-codec/1.16.1/commons-codec-1.16.1.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/netty-nio-client/2.21.29/netty-nio-client-2.21.29.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-codec-http/4.1.107.Final/netty-codec-http-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-codec-http2/4.1.107.Final/netty-codec-http2-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-codec/4.1.107.Final/netty-codec-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-buffer/4.1.107.Final/netty-buffer-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.107.Final/netty-transport-classes-epoll-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-resolver/4.1.107.Final/netty-resolver-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.70/bcpkix-jdk15on-1.70.jar:/Users/hongyuanfan/.m2/repository/org/bouncycastle/bcutil-jdk15on/1.70/bcutil-jdk15on-1.70.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-quartz/3.2.3/spring-boot-starter-quartz-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-tx/6.1.4/spring-tx-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/quartz-scheduler/quartz/2.3.2/quartz-2.3.2.jar:/Users/hongyuanfan/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/Users/hongyuanfan/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:/Users/hongyuanfan/.m2/repository/org/mapstruct/mapstruct/1.5.5.Final/mapstruct-1.5.5.Final.jar:/Users/hongyuanfan/.m2/repository/org/mapstruct/mapstruct-processor/1.5.5.Final/mapstruct-processor-1.5.5.Final.jar:/Users/hongyuanfan/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="catalina.useNaming" value="false"/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="user.timezone" value="Australia/Sydney"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="user.country" value="AU"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/hongyuanfan/Desktop/lifetech/LifeTechBackend/Backend/target/surefire/surefirebooter-20250613130616240_3.jar /Users/hongyuanfan/Desktop/lifetech/LifeTechBackend/Backend/target/surefire 2025-06-13T13-06-16_193-jvmRun1 surefire-20250613130616240_1tmp surefire_0-20250613130616240_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/hongyuanfan/Desktop/lifetech/LifeTechBackend/Backend/target/test-classes:/Users/hongyuanfan/Desktop/lifetech/LifeTechBackend/Backend/target/classes:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.3/spring-boot-starter-web-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.3/spring-boot-starter-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot/3.2.3/spring-boot-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.3/spring-boot-autoconfigure-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.3/spring-boot-starter-logging-3.2.3.jar:/Users/hongyuanfan/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/hongyuanfan/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/hongyuanfan/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/hongyuanfan/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/hongyuanfan/.m2/repository/org/slf4j/jul-to-slf4j/2.0.12/jul-to-slf4j-2.0.12.jar:/Users/hongyuanfan/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/hongyuanfan/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.3/spring-boot-starter-json-3.2.3.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.4/jackson-datatype-jdk8-2.15.4.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.4/jackson-module-parameter-names-2.15.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.3/spring-boot-starter-tomcat-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.19/tomcat-embed-core-10.1.19.jar:/Users/hongyuanfan/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.19/tomcat-embed-websocket-10.1.19.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-web/6.1.4/spring-web-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-beans/6.1.4/spring-beans-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-webmvc/6.1.4/spring-webmvc-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-context/6.1.4/spring-context-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-expression/6.1.4/spring-expression-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.3/spring-boot-starter-security-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-aop/6.1.4/spring-aop-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/security/spring-security-config/6.2.2/spring-security-config-6.2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/security/spring-security-web/6.2.2/spring-security-web-6.2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.3/spring-boot-starter-data-jpa-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.3/spring-boot-starter-jdbc-3.2.3.jar:/Users/hongyuanfan/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-jdbc/6.1.4/spring-jdbc-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/hibernate/orm/hibernate-core/6.4.4.Final/hibernate-core-6.4.4.Final.jar:/Users/hongyuanfan/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/hongyuanfan/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/hongyuanfan/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/hongyuanfan/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/hongyuanfan/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/Users/hongyuanfan/.m2/repository/net/bytebuddy/byte-buddy/1.14.12/byte-buddy-1.14.12.jar:/Users/hongyuanfan/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.4/jaxb-runtime-4.0.4.jar:/Users/hongyuanfan/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.4/jaxb-core-4.0.4.jar:/Users/hongyuanfan/.m2/repository/org/glassfish/jaxb/txw2/4.0.4/txw2-4.0.4.jar:/Users/hongyuanfan/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/hongyuanfan/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/hongyuanfan/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/data/spring-data-jpa/3.2.3/spring-data-jpa-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/data/spring-data-commons/3.2.3/spring-data-commons-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-orm/6.1.4/spring-orm-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-aspects/6.1.4/spring-aspects-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/3.2.3/spring-boot-starter-data-redis-3.2.3.jar:/Users/hongyuanfan/.m2/repository/io/lettuce/lettuce-core/6.3.1.RELEASE/lettuce-core-6.3.1.RELEASE.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-common/4.1.107.Final/netty-common-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-handler/4.1.107.Final/netty-handler-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.107.Final/netty-transport-native-unix-common-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-transport/4.1.107.Final/netty-transport-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/projectreactor/reactor-core/3.6.3/reactor-core-3.6.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/data/spring-data-redis/3.2.3/spring-data-redis-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/data/spring-data-keyvalue/3.2.3/spring-data-keyvalue-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-oxm/6.1.4/spring-oxm-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-data-mongodb/3.2.3/spring-boot-starter-data-mongodb-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/mongodb/mongodb-driver-sync/4.11.1/mongodb-driver-sync-4.11.1.jar:/Users/hongyuanfan/.m2/repository/org/mongodb/bson/4.11.1/bson-4.11.1.jar:/Users/hongyuanfan/.m2/repository/org/mongodb/mongodb-driver-core/4.11.1/mongodb-driver-core-4.11.1.jar:/Users/hongyuanfan/.m2/repository/org/mongodb/bson-record-codec/4.11.1/bson-record-codec-4.11.1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/data/spring-data-mongodb/4.2.3/spring-data-mongodb-4.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.3/spring-boot-starter-validation-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.19/tomcat-embed-el-10.1.19.jar:/Users/hongyuanfan/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/hongyuanfan/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-mail/3.2.3/spring-boot-starter-mail-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-context-support/6.1.4/spring-context-support-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.2/jakarta.mail-2.0.2.jar:/Users/hongyuanfan/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/Users/hongyuanfan/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.2.3/spring-boot-starter-amqp-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-messaging/6.1.4/spring-messaging-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/amqp/spring-rabbit/3.1.2/spring-rabbit-3.1.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/amqp/spring-amqp/3.1.2/spring-amqp-3.1.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/retry/spring-retry/2.0.5/spring-retry-2.0.5.jar:/Users/hongyuanfan/.m2/repository/com/rabbitmq/amqp-client/5.19.0/amqp-client-5.19.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/3.2.3/spring-boot-starter-actuator-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/3.2.3/spring-boot-actuator-autoconfigure-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-actuator/3.2.3/spring-boot-actuator-3.2.3.jar:/Users/hongyuanfan/.m2/repository/io/micrometer/micrometer-observation/1.12.3/micrometer-observation-1.12.3.jar:/Users/hongyuanfan/.m2/repository/io/micrometer/micrometer-commons/1.12.3/micrometer-commons-1.12.3.jar:/Users/hongyuanfan/.m2/repository/io/micrometer/micrometer-jakarta9/1.12.3/micrometer-jakarta9-1.12.3.jar:/Users/hongyuanfan/.m2/repository/io/micrometer/micrometer-core/1.12.3/micrometer-core-1.12.3.jar:/Users/hongyuanfan/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar:/Users/hongyuanfan/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.3/spring-boot-starter-aop-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/aspectj/aspectjweaver/1.9.21/aspectjweaver-1.9.21.jar:/Users/hongyuanfan/.m2/repository/org/springframework/statemachine/spring-statemachine-starter/4.0.0/spring-statemachine-starter-4.0.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/statemachine/spring-statemachine-autoconfigure/4.0.0/spring-statemachine-autoconfigure-4.0.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/statemachine/spring-statemachine-core/4.0.0/spring-statemachine-core-4.0.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-batch/3.2.3/spring-boot-starter-batch-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/batch/spring-batch-core/5.1.1/spring-batch-core-5.1.1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/batch/spring-batch-infrastructure/5.1.1/spring-batch-infrastructure-5.1.1.jar:/Users/hongyuanfan/.m2/repository/org/postgresql/postgresql/42.6.1/postgresql-42.6.1.jar:/Users/hongyuanfan/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/hongyuanfan/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/Users/hongyuanfan/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/Users/hongyuanfan/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/Users/hongyuanfan/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:/Users/hongyuanfan/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.2.0/springdoc-openapi-starter-webmvc-ui-2.2.0.jar:/Users/hongyuanfan/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.2.0/springdoc-openapi-starter-webmvc-api-2.2.0.jar:/Users/hongyuanfan/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.2.0/springdoc-openapi-starter-common-2.2.0.jar:/Users/hongyuanfan/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.15/swagger-core-jakarta-2.2.15.jar:/Users/hongyuanfan/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.15/swagger-annotations-jakarta-2.2.15.jar:/Users/hongyuanfan/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.15/swagger-models-jakarta-2.2.15.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.4/jackson-dataformat-yaml-2.15.4.jar:/Users/hongyuanfan/.m2/repository/org/webjars/swagger-ui/5.2.0/swagger-ui-5.2.0.jar:/Users/hongyuanfan/.m2/repository/com/github/vladimir-bukhtoyarov/bucket4j-core/7.6.0/bucket4j-core-7.6.0.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.3/spring-boot-starter-test-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-test/3.2.3/spring-boot-test-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.3/spring-boot-test-autoconfigure-3.2.3.jar:/Users/hongyuanfan/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/hongyuanfan/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.1/jakarta.xml.bind-api-4.0.1.jar:/Users/hongyuanfan/.m2/repository/net/minidev/json-smart/2.5.0/json-smart-2.5.0.jar:/Users/hongyuanfan/.m2/repository/net/minidev/accessors-smart/2.5.0/accessors-smart-2.5.0.jar:/Users/hongyuanfan/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/Users/hongyuanfan/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/hongyuanfan/.m2/repository/org/awaitility/awaitility/4.2.0/awaitility-4.2.0.jar:/Users/hongyuanfan/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/hongyuanfan/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/Users/hongyuanfan/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar:/Users/hongyuanfan/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/hongyuanfan/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/Users/hongyuanfan/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/hongyuanfan/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/Users/hongyuanfan/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/Users/hongyuanfan/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/Users/hongyuanfan/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/hongyuanfan/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.12/byte-buddy-agent-1.14.12.jar:/Users/hongyuanfan/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/hongyuanfan/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/hongyuanfan/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/hongyuanfan/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-core/6.1.4/spring-core-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-jcl/6.1.4/spring-jcl-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-test/6.1.4/spring-test-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/hongyuanfan/.m2/repository/org/springframework/security/spring-security-test/6.2.2/spring-security-test-6.2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/security/spring-security-core/6.2.2/spring-security-core-6.2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/security/spring-security-crypto/6.2.2/spring-security-crypto-6.2.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/amqp/spring-rabbit-test/3.1.2/spring-rabbit-test-3.1.2.jar:/Users/hongyuanfan/.m2/repository/org/springframework/amqp/spring-rabbit-junit/3.1.2/spring-rabbit-junit-3.1.2.jar:/Users/hongyuanfan/.m2/repository/org/hamcrest/hamcrest-library/2.2/hamcrest-library-2.2.jar:/Users/hongyuanfan/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/junit-jupiter/1.19.3/junit-jupiter-1.19.3.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/testcontainers/1.19.3/testcontainers-1.19.3.jar:/Users/hongyuanfan/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/hongyuanfan/.m2/repository/org/apache/commons/commons-compress/1.24.0/commons-compress-1.24.0.jar:/Users/hongyuanfan/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/Users/hongyuanfan/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/Users/hongyuanfan/.m2/repository/com/github/docker-java/docker-java-api/3.3.4/docker-java-api-3.3.4.jar:/Users/hongyuanfan/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.4/docker-java-transport-zerodep-3.3.4.jar:/Users/hongyuanfan/.m2/repository/com/github/docker-java/docker-java-transport/3.3.4/docker-java-transport-3.3.4.jar:/Users/hongyuanfan/.m2/repository/net/java/dev/jna/jna/5.13.0/jna-5.13.0.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/postgresql/1.19.3/postgresql-1.19.3.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/jdbc/1.19.3/jdbc-1.19.3.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/database-commons/1.19.3/database-commons-1.19.3.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/mongodb/1.19.3/mongodb-1.19.3.jar:/Users/hongyuanfan/.m2/repository/org/testcontainers/rabbitmq/1.19.3/rabbitmq-1.19.3.jar:/Users/hongyuanfan/.m2/repository/com/itextpdf/kernel/7.2.5/kernel-7.2.5.jar:/Users/hongyuanfan/.m2/repository/com/itextpdf/io/7.2.5/io-7.2.5.jar:/Users/hongyuanfan/.m2/repository/com/itextpdf/commons/7.2.5/commons-7.2.5.jar:/Users/hongyuanfan/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.70/bcprov-jdk15on-1.70.jar:/Users/hongyuanfan/.m2/repository/org/slf4j/slf4j-api/2.0.12/slf4j-api-2.0.12.jar:/Users/hongyuanfan/.m2/repository/com/itextpdf/layout/7.2.5/layout-7.2.5.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/s3/2.21.29/s3-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/aws-xml-protocol/2.21.29/aws-xml-protocol-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/aws-query-protocol/2.21.29/aws-query-protocol-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/protocol-core/2.21.29/protocol-core-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/arns/2.21.29/arns-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/profiles/2.21.29/profiles-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/crt-core/2.21.29/crt-core-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/http-auth/2.21.29/http-auth-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/identity-spi/2.21.29/identity-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/http-auth-spi/2.21.29/http-auth-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/http-auth-aws/2.21.29/http-auth-aws-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/checksums-spi/2.21.29/checksums-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/checksums/2.21.29/checksums-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/sdk-core/2.21.29/sdk-core-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/auth/2.21.29/auth-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/eventstream/eventstream/1.0.1/eventstream-1.0.1.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/http-client-spi/2.21.29/http-client-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/regions/2.21.29/regions-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/annotations/2.21.29/annotations-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/utils/2.21.29/utils-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/aws-core/2.21.29/aws-core-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/metrics-spi/2.21.29/metrics-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/json-utils/2.21.29/json-utils-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/third-party-jackson-core/2.21.29/third-party-jackson-core-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/endpoints-spi/2.21.29/endpoints-spi-2.21.29.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/apache-client/2.21.29/apache-client-2.21.29.jar:/Users/hongyuanfan/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/Users/hongyuanfan/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/hongyuanfan/.m2/repository/org/apache/httpcomponents/httpcore/4.4.16/httpcore-4.4.16.jar:/Users/hongyuanfan/.m2/repository/commons-codec/commons-codec/1.16.1/commons-codec-1.16.1.jar:/Users/hongyuanfan/.m2/repository/software/amazon/awssdk/netty-nio-client/2.21.29/netty-nio-client-2.21.29.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-codec-http/4.1.107.Final/netty-codec-http-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-codec-http2/4.1.107.Final/netty-codec-http2-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-codec/4.1.107.Final/netty-codec-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-buffer/4.1.107.Final/netty-buffer-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.107.Final/netty-transport-classes-epoll-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/io/netty/netty-resolver/4.1.107.Final/netty-resolver-4.1.107.Final.jar:/Users/hongyuanfan/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.70/bcpkix-jdk15on-1.70.jar:/Users/hongyuanfan/.m2/repository/org/bouncycastle/bcutil-jdk15on/1.70/bcutil-jdk15on-1.70.jar:/Users/hongyuanfan/.m2/repository/org/springframework/boot/spring-boot-starter-quartz/3.2.3/spring-boot-starter-quartz-3.2.3.jar:/Users/hongyuanfan/.m2/repository/org/springframework/spring-tx/6.1.4/spring-tx-6.1.4.jar:/Users/hongyuanfan/.m2/repository/org/quartz-scheduler/quartz/2.3.2/quartz-2.3.2.jar:/Users/hongyuanfan/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/Users/hongyuanfan/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:/Users/hongyuanfan/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:/Users/hongyuanfan/.m2/repository/org/mapstruct/mapstruct/1.5.5.Final/mapstruct-1.5.5.Final.jar:/Users/hongyuanfan/.m2/repository/org/mapstruct/mapstruct-processor/1.5.5.Final/mapstruct-processor-1.5.5.Final.jar:/Users/hongyuanfan/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/hongyuanfan"/>
    <property name="user.language" value="zh"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/hongyuanfan/Desktop/lifetech/LifeTechBackend/Backend"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/Users/hongyuanfan/Desktop/lifetech/LifeTechBackend/Backend/target/surefire/surefirebooter-20250613130616240_3.jar"/>
    <property name="user.script" value="Hans"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="17.0.15+6"/>
    <property name="user.name" value="hongyuanfan"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="14.3.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-17.0.15+6"/>
    <property name="LOG_FILE" value="logs/lifetech-backend.log"/>
    <property name="localRepository" value="/Users/hongyuanfan/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/ny/p1b7h5516x34l3qfnxgzb2v00000gn/T/"/>
    <property name="catalina.home" value="/private/var/folders/ny/p1b7h5516x34l3qfnxgzb2v00000gn/T/tomcat.0.8871468926703936752"/>
    <property name="java.version" value="17.0.15"/>
    <property name="user.dir" value="/Users/hongyuanfan/Desktop/lifetech/LifeTechBackend/Backend"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="52046"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="catalina.base" value="/private/var/folders/ny/p1b7h5516x34l3qfnxgzb2v00000gn/T/tomcat.0.16265180901322069683"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/hongyuanfan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="17.0.15+6"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="61.0"/>
    <property name="CONSOLE_LOG_PATTERN" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>
    <property name="LOGGED_APPLICATION_NAME" value="[finance-admin-management-test] "/>
  </properties>
  <testcase name="findByIdAndClientId_WithWrongClient_ReturnsEmpty" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.047">
    <system-out><![CDATA[13:06:32.482 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.finance.admin.client.document.repository.ClientDocumentRepositoryTest]: ClientDocumentRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
13:06:32.502 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.finance.admin.AdminManagementApplication for test class com.finance.admin.client.document.repository.ClientDocumentRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.3)

13:06:32.529 [main] INFO  c.f.a.c.d.r.ClientDocumentRepositoryTest - Starting ClientDocumentRepositoryTest using Java 17.0.15 with PID 52046 (started by hongyuanfan in /Users/hongyuanfan/Desktop/lifetech/LifeTechBackend/Backend)
13:06:32.529 [main] INFO  c.f.a.c.d.r.ClientDocumentRepositoryTest - The following 1 profile is active: "test"
13:06:32.626 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
Hibernate: drop table if exists admin_user_allowed_ips cascade 
Hibernate: drop table if exists admin_user_roles cascade 
Hibernate: drop table if exists admin_users cascade 
Hibernate: drop table if exists audit_logs cascade 
Hibernate: drop table if exists certificate_templates cascade 
Hibernate: drop table if exists certificates cascade 
Hibernate: drop table if exists client_documents cascade 
Hibernate: drop table if exists client_login_history cascade 
Hibernate: drop table if exists clients cascade 
Hibernate: drop table if exists enquiries cascade 
Hibernate: drop table if exists entities cascade 
Hibernate: drop table if exists investments cascade 
Hibernate: drop table if exists users cascade 
Hibernate: create table admin_user_allowed_ips (admin_user_id uuid not null, ip_address varchar(45))
Hibernate: create table admin_user_roles (admin_user_id uuid not null, role varchar(255) check (role in ('SUPER_ADMIN','SYSTEM_ADMIN','FINANCIAL_ADMIN','CUSTOMER_SERVICE_ADMIN','COMPLIANCE_OFFICER','ANALYST')))
Hibernate: create table admin_users (failed_login_attempts integer not null, force_password_change boolean not null, mfa_enabled boolean not null, session_timeout_minutes integer, created_at timestamp(6) not null, last_login timestamp(6), last_password_change timestamp(6), locked_until timestamp(6), password_expires_at timestamp(6), updated_at timestamp(6), version bigint, id uuid not null, status varchar(20) not null check (status in ('ACTIVE','INACTIVE','SUSPENDED','LOCKED','EXPIRED','PENDING_ACTIVATION')), username varchar(50) not null unique, email varchar(100) not null unique, created_by varchar(255), mfa_secret varchar(255), password varchar(255) not null, updated_by varchar(255), primary key (id))
Hibernate: create table audit_logs (created_at timestamp(6) not null, end_time timestamp(6) not null, start_time timestamp(6) not null, updated_at timestamp(6), version bigint, user_type varchar(10) not null, entity_id uuid, id uuid not null, user_id uuid, status varchar(20) not null, ip_address varchar(45), action_type varchar(100) not null, entity_type varchar(100) not null, method_name varchar(100), created_by varchar(255), error_message varchar(255), new_values jsonb, old_values jsonb, parameters varchar(255), session_id varchar(255), updated_by varchar(255), user_agent varchar(255), primary key (id))
13:06:32.926 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "create table audit_logs (created_at timestamp(6) not null, end_time timestamp(6) not null, start_time timestamp(6) not null, updated_at timestamp(6), version bigint, user_type varchar(10) not null, entity_id uuid, id uuid not null, user_id uuid, status varchar(20) not null, ip_address varchar(45), action_type varchar(100) not null, entity_type varchar(100) not null, method_name varchar(100), created_by varchar(255), error_message varchar(255), new_values jsonb, old_values jsonb, parameters varchar(255), session_id varchar(255), updated_by varchar(255), user_agent varchar(255), primary key (id))" via JDBC [Unknown data type: "JSONB";]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table audit_logs (created_at timestamp(6) not null, end_time timestamp(6) not null, start_time timestamp(6) not null, updated_at timestamp(6), version bigint, user_type varchar(10) not null, entity_id uuid, id uuid not null, user_id uuid, status varchar(20) not null, ip_address varchar(45), action_type varchar(100) not null, entity_type varchar(100) not null, method_name varchar(100), created_by varchar(255), error_message varchar(255), new_values jsonb, old_values jsonb, parameters varchar(255), session_id varchar(255), updated_by varchar(255), user_agent varchar(255), primary key (id))" via JDBC [Unknown data type: "JSONB";]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Unknown data type: "JSONB"; SQL statement:
create table audit_logs (created_at timestamp(6) not null, end_time timestamp(6) not null, start_time timestamp(6) not null, updated_at timestamp(6), version bigint, user_type varchar(10) not null, entity_id uuid, id uuid not null, user_id uuid, status varchar(20) not null, ip_address varchar(45), action_type varchar(100) not null, entity_type varchar(100) not null, method_name varchar(100), created_by varchar(255), error_message varchar(255), new_values jsonb, old_values jsonb, parameters varchar(255), session_id varchar(255), updated_by varchar(255), user_agent varchar(255), primary key (id)) [50004-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.readIfDataType1(Parser.java:5866)
	at org.h2.command.Parser.readIfDataType(Parser.java:5704)
	at org.h2.command.Parser.parseColumnWithType(Parser.java:5686)
	at org.h2.command.Parser.parseColumnForTable(Parser.java:5565)
	at org.h2.command.Parser.parseTableColumnDefinition(Parser.java:8999)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8939)
	at org.h2.command.Parser.parseCreate(Parser.java:6404)
	at org.h2.command.Parser.parsePrepared(Parser.java:666)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 118 common frames omitted
Hibernate: create table certificate_templates (is_active boolean, is_default boolean, version integer, primary_color varchar(7), secondary_color varchar(7), created_at timestamp(6) not null, id bigint generated by default as identity, updated_at timestamp(6), created_by uuid not null, template_format varchar(20), template_type varchar(50) not null check (template_type in ('SHARE_CERTIFICATE','INVESTMENT_CERTIFICATE','UNIT_CERTIFICATE','BOND_CERTIFICATE','EQUITY_CERTIFICATE','CUSTOM')), background_image_path varchar(500), company_logo_path varchar(500), template_file_path varchar(500), template_content TEXT not null, template_name varchar(255) not null, template_variables TEXT, primary key (id))
Hibernate: create table certificates (expiry_date date, investment_amount numeric(15,2), issue_date date not null, number_of_shares numeric(15,4), share_price numeric(10,4), version integer, client_id bigint not null, created_at timestamp(6) not null, file_size bigint, id bigint generated by default as identity, investment_id bigint not null, template_id bigint, updated_at timestamp(6), created_by uuid not null, updated_by uuid, status varchar(20) check (status in ('ACTIVE','INACTIVE','EXPIRED','REVOKED','PENDING')), certificate_number varchar(50) not null unique, certificate_type varchar(50) not null check (certificate_type in ('SHARE_CERTIFICATE','INVESTMENT_CERTIFICATE','UNIT_CERTIFICATE','BOND_CERTIFICATE','EQUITY_CERTIFICATE')), file_hash varchar(128), file_path varchar(500), digital_signature TEXT, primary key (id))
Hibernate: create table client_documents (access_count integer, is_active boolean, uploaded_by_client boolean, version_number integer, client_id bigint not null, created_at timestamp(6), expiry_date timestamp(6), file_size bigint, id bigint generated by default as identity, last_accessed_date timestamp(6), updated_at timestamp(6), upload_date timestamp(6), mime_type varchar(100), file_path varchar(500) not null, tags varchar(500), description varchar(1000), document_category varchar(255) not null check (document_category in ('LEGAL','COMPLIANCE','KYC','FINANCIAL','IDENTITY','TAX','INVESTMENT','REGULATORY','POLICY','PERSONAL')), document_name varchar(255) not null, document_status varchar(255) check (document_status in ('UPLOADED','UNDER_REVIEW','APPROVED','REJECTED','EXPIRED','REPLACED','ARCHIVED')), document_type varchar(255) not null check (document_type in ('INVESTMENT_AGREEMENT','TERMS_CONDITIONS','REGULATORY_DISCLOSURE','TAX_DOCUMENT','COMPANY_POLICY','PRODUCT_DISCLOSURE','KYC_DOCUMENT','BANK_STATEMENT','IDENTITY_VERIFICATION','ADDRESS_PROOF','TAX_FILE_NUMBER','BANK_ACCOUNT_UPDATE','OTHER')), primary key (id))
Hibernate: create table client_login_history (login_successful boolean, session_duration numeric(21,0), client_id bigint, id bigint generated by default as identity, login_timestamp timestamp(6) not null, logout_timestamp timestamp(6), failure_reason varchar(255), ip_address varchar(255), user_agent TEXT, primary key (id))
Hibernate: create table clients (date_of_birth date, investment_target numeric(15,2), mailing_address_same boolean, created_at timestamp(6) not null, id bigint generated by default as identity, updated_at timestamp(6), bank_bsb varchar(10), address_postal_code varchar(20), mailing_postal_code varchar(20), membership_number varchar(20) not null unique, phone_primary varchar(20), phone_secondary varchar(20), status varchar(20) check (status in ('ACTIVE','INACTIVE','PENDING','SUSPENDED')), risk_profile varchar(50), tax_residency_status varchar(50), address_city varchar(100), address_country varchar(100), address_state varchar(100), first_name varchar(100) not null, last_name varchar(100) not null, mailing_city varchar(100), mailing_country varchar(100), mailing_state varchar(100), middle_name varchar(100), blockchain_identity_hash varchar(128), address_street varchar(255), bank_account_name varchar(255), bank_account_number_encrypted varchar(255), created_by varchar(255), email_primary varchar(255) not null unique, email_secondary varchar(255), mailing_street varchar(255), tfn_encrypted varchar(255), updated_by varchar(255), primary key (id))
Hibernate: create table enquiries (client_id bigint, created_at timestamp(6) not null, due_date timestamp(6), id bigint generated by default as identity, resolved_date timestamp(6), response_date timestamp(6), updated_at timestamp(6), assigned_to uuid, created_by uuid, updated_by uuid, contact_phone varchar(20), enquiry_number varchar(20) not null unique, source varchar(50), category varchar(100), contact_email varchar(255), contact_name varchar(255), description TEXT, enquiry_type varchar(255) not null check (enquiry_type in ('GENERAL_INQUIRY','INVESTMENT_INQUIRY','ACCOUNT_SUPPORT','TECHNICAL_SUPPORT','COMPLAINT','FEEDBACK','PARTNERSHIP','MEDIA_INQUIRY','COMPLIANCE','OTHER')), internal_notes TEXT, priority varchar(255) check (priority in ('LOW','MEDIUM','HIGH','URGENT')), response TEXT, status varchar(255) check (status in ('OPEN','IN_PROGRESS','PENDING_CLIENT','RESOLVED','CLOSED','ESCALATED')), subject varchar(255) not null, tags varchar(255), primary key (id))
Hibernate: create table entities (gst_registered boolean, registration_date date, client_id bigint not null, created_at timestamp(6) not null, created_by bigint, id bigint generated by default as identity, updated_at timestamp(6), updated_by bigint, acn varchar(9), abn varchar(11), contact_phone varchar(20), registered_postal_code varchar(20), tax_residency_status varchar(50), registered_city varchar(100), registered_country varchar(100), registered_state varchar(100), contact_email varchar(255), contact_person varchar(255), entity_name varchar(255) not null, entity_type varchar(255) not null check (entity_type in ('INDIVIDUAL','JOINT_ACCOUNT','COMPANY','FAMILY_TRUST','UNIT_TRUST','DISCRETIONARY_TRUST','SMSF','PARTNERSHIP','OTHER')), registered_street varchar(255), registration_number varchar(255), status varchar(255) check (status in ('ACTIVE','INACTIVE','PENDING','SUSPENDED')), tfn_encrypted varchar(255), primary key (id))
Hibernate: create table investments (actual_return_amount numeric(15,2), current_price_per_unit numeric(15,4), current_value numeric(15,2), expected_return_amount numeric(15,2), expected_return_rate numeric(5,2), initial_amount numeric(15,2) not null, management_fees numeric(10,2), maturity_date date, performance_fees numeric(10,2), purchase_date date not null, purchase_price_per_unit numeric(15,4), transaction_fees numeric(10,2), units_purchased numeric(15,4), client_id bigint not null, created_at timestamp(6) not null, created_by bigint, entity_id bigint, id bigint generated by default as identity, updated_at timestamp(6), updated_by bigint, description TEXT, investment_category varchar(255), investment_name varchar(255) not null, investment_objective TEXT, investment_type varchar(255) not null check (investment_type in ('PROPERTY_RESIDENTIAL','PROPERTY_COMMERCIAL','PROPERTY_INDUSTRIAL','EQUITY_LISTED_SHARES','EQUITY_PRIVATE','FIXED_INCOME_BONDS','FIXED_INCOME_TERM_DEPOSITS','FIXED_INCOME_GOVERNMENT','ALTERNATIVE_COMMODITIES','ALTERNATIVE_CRYPTOCURRENCY','ALTERNATIVE_COLLECTIBLES','MANAGED_FUNDS_MUTUAL','MANAGED_FUNDS_ETF','MANAGED_FUNDS_HEDGE','DIRECT_BUSINESS','DIRECT_STARTUPS')), risk_rating varchar(255) check (risk_rating in ('CONSERVATIVE','MODERATE','AGGRESSIVE')), status varchar(255) check (status in ('PENDING','ACTIVE','MATURED','PARTIAL_EXIT','FULLY_EXITED','SUSPENDED','DEFAULTED')), primary key (id))
Hibernate: create table users (email_verified boolean, failed_login_attempts integer, phone_verified boolean, account_locked_at timestamp(6), created_at timestamp(6) not null, date_of_birth timestamp(6), last_failed_login_at timestamp(6), last_login_at timestamp(6), login_count bigint, password_changed_at timestamp(6), status_changed_at timestamp(6), updated_at timestamp(6), version bigint, locale varchar(10), timezone varchar(10), id uuid not null, status_changed_by uuid, phone_number varchar(20), first_name varchar(50), last_name varchar(50), username varchar(50) not null unique, email varchar(100) not null unique, status_change_reason varchar(500), created_by varchar(255), last_login_ip varchar(255), password varchar(255) not null, profile_image_url varchar(255), status varchar(255) not null check (status in ('ACTIVE','SUSPENDED','BANNED','PENDING_VERIFICATION','DEACTIVATED','LOCKED')), updated_by varchar(255), primary key (id))
Hibernate: create index idx_admin_username on admin_users (username)
Hibernate: create index idx_admin_email on admin_users (email)
Hibernate: create index idx_admin_status on admin_users (status)
Hibernate: create index idx_audit_user_id on audit_logs (user_id)
13:06:32.935 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "create index idx_audit_user_id on audit_logs (user_id)" via JDBC [Table "AUDIT_LOGS" not found;]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create index idx_audit_user_id on audit_logs (user_id)" via JDBC [Table "AUDIT_LOGS" not found;]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:383)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "AUDIT_LOGS" not found; SQL statement:
create index idx_audit_user_id on audit_logs (user_id) [42102-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:70)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 118 common frames omitted
Hibernate: create index idx_audit_action_type on audit_logs (action_type)
13:06:32.935 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "create index idx_audit_action_type on audit_logs (action_type)" via JDBC [Table "AUDIT_LOGS" not found;]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create index idx_audit_action_type on audit_logs (action_type)" via JDBC [Table "AUDIT_LOGS" not found;]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:383)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "AUDIT_LOGS" not found; SQL statement:
create index idx_audit_action_type on audit_logs (action_type) [42102-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:70)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 118 common frames omitted
Hibernate: create index idx_audit_entity_type on audit_logs (entity_type)
13:06:32.936 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "create index idx_audit_entity_type on audit_logs (entity_type)" via JDBC [Table "AUDIT_LOGS" not found;]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create index idx_audit_entity_type on audit_logs (entity_type)" via JDBC [Table "AUDIT_LOGS" not found;]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:383)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "AUDIT_LOGS" not found; SQL statement:
create index idx_audit_entity_type on audit_logs (entity_type) [42102-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:70)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 118 common frames omitted
Hibernate: create index idx_audit_created_at on audit_logs (created_at)
13:06:32.937 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "create index idx_audit_created_at on audit_logs (created_at)" via JDBC [Table "AUDIT_LOGS" not found;]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create index idx_audit_created_at on audit_logs (created_at)" via JDBC [Table "AUDIT_LOGS" not found;]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:383)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "AUDIT_LOGS" not found; SQL statement:
create index idx_audit_created_at on audit_logs (created_at) [42102-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:70)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 118 common frames omitted
Hibernate: create index idx_user_email on users (email)
Hibernate: create index idx_user_username on users (username)
Hibernate: create index idx_user_status on users (status)
Hibernate: create index idx_user_created_at on users (createdAt)
13:06:32.938 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "create index idx_user_created_at on users (createdAt)" via JDBC [Column "CREATEDAT" not found;]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create index idx_user_created_at on users (createdAt)" via JDBC [Column "CREATEDAT" not found;]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:383)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "CREATEDAT" not found; SQL statement:
create index idx_user_created_at on users (createdAt) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:184)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:104)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 118 common frames omitted
Hibernate: create index idx_user_last_login on users (lastLoginAt)
13:06:32.939 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "create index idx_user_last_login on users (lastLoginAt)" via JDBC [Column "LASTLOGINAT" not found;]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create index idx_user_last_login on users (lastLoginAt)" via JDBC [Column "LASTLOGINAT" not found;]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:383)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "LASTLOGINAT" not found; SQL statement:
create index idx_user_last_login on users (lastLoginAt) [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:184)
	at org.h2.command.ddl.CreateIndex.update(CreateIndex.java:104)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:262)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 118 common frames omitted
Hibernate: alter table if exists admin_user_allowed_ips add constraint FK6djpms049826iouqv8t4aun7w foreign key (admin_user_id) references admin_users
Hibernate: alter table if exists admin_user_roles add constraint FK486l3h5kt03mw088cosejeud1 foreign key (admin_user_id) references admin_users
Hibernate: alter table if exists certificates add constraint FKlnwjsut7480baufv45j0i4bf3 foreign key (client_id) references clients
Hibernate: alter table if exists certificates add constraint FKmuei4qx2vt6qemjkrjqkd0r3b foreign key (investment_id) references investments
Hibernate: alter table if exists certificates add constraint FK1qd9d9utbnnhhqff0e01nmgwl foreign key (template_id) references certificate_templates
Hibernate: alter table if exists client_documents add constraint FK8w1vi21ia7d69btkpligpf3hw foreign key (client_id) references clients
Hibernate: alter table if exists client_login_history add constraint FKj2f6d8l3leqrkylvad72hgpva foreign key (client_id) references clients
Hibernate: alter table if exists enquiries add constraint FK9r33qikmwbv07bnak6dmstqfv foreign key (client_id) references clients
Hibernate: alter table if exists entities add constraint FKofse0g9fghwfrt42ko68175y1 foreign key (client_id) references clients
Hibernate: alter table if exists investments add constraint FKrst49wjxgj0suyv8ceesdv7w1 foreign key (client_id) references clients
Hibernate: alter table if exists investments add constraint FKragfnufauta9wlljt2qpue0hq foreign key (entity_id) references entities
13:06:33.544 [main] INFO  c.f.a.c.d.r.ClientDocumentRepositoryTest - Started ClientDocumentRepositoryTest in 1.041 seconds (process running for 17.232)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where cd1_0.id=? and c1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="findMostAccessed_WithAccessCountData_ReturnsMostAccessedDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.018">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 where cd1_0.client_id=? and cd1_0.is_active=true order by cd1_0.access_count desc offset ? rows fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="findByClientIdAndDocumentTypeAndIsActiveTrue_WithValidType_ReturnsFilteredDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.013">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where c1_0.id=? and cd1_0.document_type=? and cd1_0.is_active
]]></system-out>
  </testcase>
  <testcase name="searchByName_WithMatchingTerm_ReturnsMatchingDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.013">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 where cd1_0.client_id=? and cd1_0.is_active=true and lower(cd1_0.document_name) like lower(('%'||?||'%')) escape ''
]]></system-out>
  </testcase>
  <testcase name="findWithFilters_WithMultipleFilters_ReturnsFilteredDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.026">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 where cd1_0.client_id=? and cd1_0.is_active=true and (? is null or cd1_0.document_type=?) and (? is null or cd1_0.document_category=?) and (? is null or cd1_0.document_status=?) and (? is null or cd1_0.uploaded_by_client=?) offset ? rows fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="countByClientIdAndIsActiveTrue_WithActiveDocuments_ReturnsCorrectCount" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.059">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select count(cd1_0.id) from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where c1_0.id=? and cd1_0.is_active
]]></system-out>
  </testcase>
  <testcase name="existsByClientIdAndDocumentTypeAndIsActiveTrue_WithExistingType_ReturnsTrue" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.026">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where c1_0.id=? and cd1_0.document_type=? and cd1_0.is_active fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="searchDocuments_WithMatchingTermInTags_ReturnsMatchingDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.019">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 where cd1_0.client_id=? and cd1_0.is_active=true and (lower(cd1_0.document_name) like lower(('%'||?||'%')) escape '' or lower(cd1_0.description) like lower(('%'||?||'%')) escape '' or lower(cd1_0.tags) like lower(('%'||?||'%')) escape '')
]]></system-out>
  </testcase>
  <testcase name="findByClientIdAndUploadedByClientTrueAndIsActiveTrue_ReturnsClientUploadedDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.018">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where c1_0.id=? and cd1_0.uploaded_by_client and cd1_0.is_active
]]></system-out>
  </testcase>
  <testcase name="searchDocuments_WithMatchingTermInDescription_ReturnsMatchingDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.014">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 where cd1_0.client_id=? and cd1_0.is_active=true and (lower(cd1_0.document_name) like lower(('%'||?||'%')) escape '' or lower(cd1_0.description) like lower(('%'||?||'%')) escape '' or lower(cd1_0.tags) like lower(('%'||?||'%')) escape '')
]]></system-out>
  </testcase>
  <testcase name="findByClientIdAndUploadedByClientFalseAndIsActiveTrue_ReturnsSystemDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.011">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where c1_0.id=? and not(cd1_0.uploaded_by_client) and cd1_0.is_active
]]></system-out>
  </testcase>
  <testcase name="findExpired_WithExpiredDocuments_ReturnsExpiredDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.009">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 where cd1_0.client_id=? and cd1_0.is_active=true and cd1_0.expiry_date is not null and cd1_0.expiry_date<?
]]></system-out>
  </testcase>
  <testcase name="getTotalFileSizeForClient_WithNoDocuments_ReturnsZero" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.01">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select coalesce(sum(cd1_0.file_size),0) from client_documents cd1_0 where cd1_0.client_id=? and cd1_0.is_active=true
]]></system-out>
  </testcase>
  <testcase name="findRecentUploads_WithRecentDocuments_ReturnsRecentDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.018">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 where cd1_0.client_id=? and cd1_0.is_active=true and cd1_0.upload_date>=? order by cd1_0.upload_date desc
]]></system-out>
  </testcase>
  <testcase name="getTotalFileSizeForClient_WithDocuments_ReturnsCorrectTotalSize" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.012">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select coalesce(sum(cd1_0.file_size),0) from client_documents cd1_0 where cd1_0.client_id=? and cd1_0.is_active=true
]]></system-out>
  </testcase>
  <testcase name="findWithFilters_WithNullFilters_ReturnsAllActiveDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.013">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 where cd1_0.client_id=? and cd1_0.is_active=true and (? is null or cd1_0.document_type=?) and (? is null or cd1_0.document_category=?) and (? is null or cd1_0.document_status=?) and (? is null or cd1_0.uploaded_by_client=?) offset ? rows fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="findByClientIdAndDocumentStatusAndIsActiveTrue_WithValidStatus_ReturnsFilteredDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.019">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where c1_0.id=? and cd1_0.document_status=? and cd1_0.is_active
]]></system-out>
  </testcase>
  <testcase name="findByClientIdAndIsActiveTrue_WithValidClient_ReturnsActiveDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.02">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where c1_0.id=? and cd1_0.is_active
]]></system-out>
  </testcase>
  <testcase name="findExpiringSoon_WithDocumentsExpiringSoon_ReturnsExpiringSoonDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.015">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 where cd1_0.client_id=? and cd1_0.is_active=true and cd1_0.expiry_date is not null and cd1_0.expiry_date between ? and ?
]]></system-out>
  </testcase>
  <testcase name="findByClientIdAndDocumentCategoryAndIsActiveTrue_WithValidCategory_ReturnsFilteredDocuments" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.009">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where c1_0.id=? and cd1_0.document_category=? and cd1_0.is_active
]]></system-out>
  </testcase>
  <testcase name="findByIdAndClientId_WithValidIds_ReturnsDocument" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.014">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where cd1_0.id=? and c1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="findByClientId_WithPagination_ReturnsPagedResults" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.015">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id,cd1_0.access_count,cd1_0.client_id,cd1_0.created_at,cd1_0.description,cd1_0.document_category,cd1_0.document_name,cd1_0.document_status,cd1_0.document_type,cd1_0.expiry_date,cd1_0.file_path,cd1_0.file_size,cd1_0.is_active,cd1_0.last_accessed_date,cd1_0.mime_type,cd1_0.tags,cd1_0.updated_at,cd1_0.upload_date,cd1_0.uploaded_by_client,cd1_0.version_number from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where c1_0.id=? offset ? rows fetch first ? rows only
Hibernate: select count(cd1_0.id) from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where c1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="existsByClientIdAndDocumentTypeAndIsActiveTrue_WithNonExistingType_ReturnsFalse" classname="com.finance.admin.client.document.repository.ClientDocumentRepositoryTest" time="0.006">
    <system-out><![CDATA[Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into clients (address_city,address_country,address_postal_code,address_state,address_street,bank_account_name,bank_account_number_encrypted,bank_bsb,blockchain_identity_hash,created_at,created_by,date_of_birth,email_primary,email_secondary,first_name,investment_target,last_name,mailing_address_same,mailing_city,mailing_country,mailing_postal_code,mailing_state,mailing_street,membership_number,middle_name,phone_primary,phone_secondary,risk_profile,status,tax_residency_status,tfn_encrypted,updated_at,updated_by,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into client_documents (access_count,client_id,created_at,description,document_category,document_name,document_status,document_type,expiry_date,file_path,file_size,is_active,last_accessed_date,mime_type,tags,updated_at,upload_date,uploaded_by_client,version_number,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: select cd1_0.id from client_documents cd1_0 left join clients c1_0 on c1_0.id=cd1_0.client_id where c1_0.id=? and cd1_0.document_type=? and cd1_0.is_active fetch first ? rows only
]]></system-out>
  </testcase>
</testsuite>